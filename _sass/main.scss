

@charset "utf-8";

// Define defaults for each variable.

$base-font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol" !default;
$base-font-size:   16px !default;
$base-font-weight: 400 !default;
$small-font-size:  $base-font-size * 0.875 !default;
$base-line-height: 1.5 !default;

$spacing-unit:     30px !default;

$text-color:       #000000 !default;
$background-color: #fdfdfd !default;
$brand-color:      #2a7ae2 !default;

$grey-color:       #828282 !default;
$grey-color-light: lighten($grey-color, 40%) !default;
$grey-color-dark:  darken($grey-color, 25%) !default;

$SI-color-blue: #121326 !global;
$SI-color-blue-light: lighten(#121326, 80%) !global;
$SI-color-blue2: #001E39 !global;
$SI-color-whitetext: #FFFFFF !default;

$table-text-align: left !default;

// Width of the content area
$content-width:    800px !default;

$on-palm:          600px !default;
$on-laptop:        800px !default;

// Use media queries like this:
// @include media-query($on-palm) {
//   .wrapper {
//     padding-right: $spacing-unit / 2;
//     padding-left: $spacing-unit / 2;
//   }
// }
@mixin media-query($device) {
  @media screen and (max-width: $device) {
    @content;
  }
}

@mixin relative-font-size($ratio) {
  font-size: $base-font-size * $ratio;
}

// Import partials.
@import
  "minima/base",
  "minima/layout",
  "minima/syntax-highlighting"
;

// SI Pushbutton Styles
.buttonSI {
  background-color: $SI-color-blue;
  border: none;
  color: $SI-color-whitetext;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  cursor: pointer;
}

.buttonSI:hover {
  background-color: #123f77; 
  font-weight: 700;
  color: $SI-color-whitetext;
  border: 1px solid #ccc;
}

.buttonSIinverted {
  background-color: $SI-color-whitetext;
  border: none;
  color: $SI-color-blue;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  box-shadow: 10px 5px 5px $SI-color-whitetext;
}

.tileContainerSI {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  width: 100%;
  height: auto;
  margin-left: auto;
  margin-right: auto;
  margin-top: auto;
  margin-bottom: auto;
  justify-content: space-around;
  min-height: 33vh;
  align-content: space-between;
  row-gap: 15px;
}

.tileContainerSI {
  min-height: 33vh;
}

.container>button {
  flex: 0 50%;
}

.tileSI {
  background-color: $SI-color-whitetext;
  border-color: $SI-color-blue;
box-shadow: 10px 5px 5px grey;
  color: $SI-color-blue;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 2vw;
  cursor: pointer;
  flex-basis: 30%;
  box-sizing: border-box;
  aspect-ratio: 1 / 1;
}

.tileSI:hover {
  background-color: $SI-color-blue;
  color: $SI-color-whitetext;
  transition: 0.15s;
}

// SI Table Styles
.tableSI {
  background-color: $SI-color-whitetext;
}

.tableSI tr:nth-child(even) {
  background-color: $SI-color-blue-light;
}

.headerSI {
  background-color: $SI-color-blue;
  color: $SI-color-whitetext;
}

.dropbtn {
  background-color: #3CB043;
  color: white;
  padding: 16px;
  font-size: 16px;
  border: none;
  cursor: pointer;
}

.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown a {
  color: #FFFFFF;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: $SI-color-blue;
  white-space: nowrap;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.5);
  padding: 12px 0px;
  z-index: 1;
}

.dropdown-content a {
  color: #FFFFFF;
  padding: 2px 16px;
  text-decoration: none;
  display: block;
}

.dropdown-content a:hover {
  background-color: #123f77;
  font-weight: bold;
}

.dropdown:hover .dropdown-content {
  display: block;
}

.dropdown:hover .dropbtn {
  background-color: #081c35;
}

.SILogoOverlay {
  display: flex;
  text-align: center;
  vertical-align: middle;
  margin: auto;
  z-index: 9;
  position: absolute;
  width: 60vw;
  height: 20vh;
  align-items: center;
  justify-content: center;
  align-self: center;
  margin-left: 20vw;
}

.JoinSIOverlay {
  display: flex;
  text-align: center;
  vertical-align: middle;
  margin: auto;
  z-index: 9;
  position: absolute;
  width: 40vw;
  height: 20vh;
  align-items: center;
  justify-content: center;
  margin-left: 70vw;
  font-size: 2vw;
}

.site-nav2 {
  float: right;
  line-height: $base-line-height * $base-font-size * 1.15;
  width: 100%;
  background-color: #121326;

  .nav-trigger {
      display: none;
  }

  .menu-icon {
    display: none;
  }

  .page-link {
    color: $text-color;
    line-height: $base-line-height;

    // Gaps between nav items, but not on the last one
    &:not(:last-child) {
      margin-right: 20px;
    }
  }

  .site-nav2 a {
    color: #FFFFFF;
  }

  @include media-query($on-palm) {

    // When hovering cursor over hamburger menu, it should become a pointer
    label[for="nav-trigger"] {
      cursor: pointer;
    }

    // Appearance of the hamburger menu
    .menu-icon {
      display: block;
      float: right;
      width: 36px;
      height: 26px;
      line-height: 0;
      padding-top: 10px;
      text-align: center;

      > svg {
        fill: $grey-color-dark;
      }
    }
  }
}

.nav-content {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;

  // When screen is small enough, change from row display to column display
  @include media-query($on-palm) {
    flex-direction: column;
  }
}

/*
  Navigation menu collapse/expand behavior

  Only hide the navigation menu content if all of the following are true:
    (A) the hamburger menu (checkbox input) has been "checked" via a click
    (B) the window width is below some threshold

  if (B) above is not included, then clicking the menu will collapse the dropdown content,
  but subsequently resizing the window above the width threshold will NOT result in the navigation
  content reappearing
*/
input[type=checkbox]:checked ~ div.nav-content {
  @include media-query($on-palm) {
    display: none;
  }
}
